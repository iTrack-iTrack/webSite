@page "/patientsinfo"
@inject HttpClient Http
@layout MainLayout
@using System.Text.Json.Serialization
@using SmartWatchWeb.Shared

<input class="form-control mb-3"
       placeholder="Search patients..."
       @bind="searchTerm"
       @bind:event="oninput" />

<p>Total patients loaded: @patients.Count</p>


@if (FilteredPatients == null)
{
    <p>Loading...</p>
}
else if (!FilteredPatients.Any())
{
    <p>No patients found matching "@searchTerm".</p>
}
else
{
    <p>Total patients loaded: @patients.Count</p>
    <p>Filtered patients shown: @FilteredPatients.Count()</p>

    <div class="card-container">
        @foreach (var patient in FilteredPatients)
        {
            <PatientProfile Patient="patient" />
        }
    </div>
}

@code {
    private string searchTerm = string.Empty;
    private List<Patient> patients = new();

    private IEnumerable<Patient> FilteredPatients =>
        string.IsNullOrWhiteSpace(searchTerm)
            ? patients
            : patients.Where(p => !string.IsNullOrEmpty(p.Name) &&
                                  p.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var summary = await Http.GetFromJsonAsync<List<UserSummary>>("http://itrackandi.watch:8082/");
            if (summary == null) return;

            var tasks = summary.Select(async user =>
            {
                try
                {
                    var result = await Http.GetFromJsonAsync<List<Patient>>($"http://itrackandi.watch:8082/{user.user_id}/info");
                    return result?.FirstOrDefault();
                }
                catch
                {
                    return null;
                }
            });

            var results = await Task.WhenAll(tasks);
            patients = results.Where(p => p != null).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading patients: " + ex.Message);
        }
    }

    public class UserSummary
    {
        public int user_id { get; set; }
        public string first_name { get; set; }
        public string last_name { get; set; }
    }

    
}
