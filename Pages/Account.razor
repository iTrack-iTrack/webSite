@page "/account"
@inject Services.UserSessionService SessionService
@inject NavigationManager NavigationManager
@using SmartWatchWeb.Models

<style>
    .account-background {
        background: linear-gradient(135deg, #ADD8E6, #2a5298);
        min-height: 100vh;
        padding: 3rem 1rem;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .navigation-bar {
        display: flex;
        justify-content: space-between;
        width: 100%;
        max-width: 900px;
        margin-bottom: 1.5rem;
    }

    .nav-button {
        padding: 0.5rem 1.2rem;
        font-size: 1rem;
        border: none;
        border-radius: 0.5rem;
        background-color: #1e3c72;
        color: white;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .nav-button:hover {
            background-color: #16325c;
        }

    .back-button {
        align-self: flex-start;
    }

    .logout-button {
        align-self: flex-end;
    }

    .profile-card {
        background-color: white;
        border-radius: 1.5rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        padding: 2rem;
        max-width: 900px;
        width: 100%;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 2rem;
    }

    .profile-picture {
        width: 160px;
        height: 160px;
        object-fit: cover;
        border-radius: 50%;
        border: 4px solid #dee2e6;
    }

    .profile-info {
        flex: 1;
    }

        .profile-info h3 {
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
            color: #1e3c72;
        }

        .profile-info p {
            margin-bottom: 0.4rem;
            font-size: 1.05rem;
        }

    .card-section {
        background-color: white;
        border-radius: 1.5rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        padding: 2rem;
        max-width: 900px;
        width: 100%;
        margin-bottom: 1.5rem;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #1e3c72;
        border-bottom: 1px solid #dee2e6;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
    }

    .info-item strong {
        display: inline-block;
        width: 120px;
        font-weight: 600;
    }
</style>

@if (CurrentPatient == null)
{
    <div class="account-background">
        <p class="text-white">Loading your profile...</p>
    </div>
}
else
{
    <div class="account-background">

        <!-- Navigation Buttons -->
        <div class="navigation-bar">
            <button @onclick="GoBackHome" class="nav-button back-button">⬅ Back</button>
            <button @onclick="Logout" class="nav-button logout-button">Logout </button>
        </div>

        <!-- Profile Card -->
        <div class="profile-card">
            <img src="@CurrentPatient.ProfilePictureUrl.TrimStart('/')"
                 alt="Profile Picture"
                 class="profile-picture" />

            <div class="profile-info">
                <h3>@CurrentPatient.Name</h3>
                <p><strong>Sickness:</strong> @CurrentPatient.Sickness</p>
                <p><strong>Address:</strong> @CurrentPatient.Address</p>
            </div>
        </div>

        <!-- Personal Info -->
        <div class="card-section">
            <h4 class="section-title">Personal Information</h4>
            <div class="info-grid">
                <div class="info-item"><strong>Name:</strong> @CurrentPatient.Name</div>
                <div class="info-item"><strong>Age:</strong> @Age</div>
                <div class="info-item"><strong>Contact:</strong> @CurrentPatient.Contact</div>
                <div class="info-item"><strong>Sickness:</strong> @CurrentPatient.Sickness</div>
            </div>
        </div>

        <!-- Address Info -->
        <div class="card-section">
            <h4 class="section-title">Address</h4>
            <div class="info-grid">
                <div class="info-item"><strong>Address:</strong> @CurrentPatient.Address</div>
                <div class="info-item"><strong>City:</strong> Grand City</div>
                <div class="info-item"><strong>Region:</strong> Blue East</div>
                <div class="info-item"><strong>Country:</strong> DigitalLand</div>
                <div class="info-item"><strong>House Number:</strong> 123</div>
            </div>
        </div>

        <!-- Section 3: Contact & Sickness -->
        <div class="card-section">
            <div class="section-title">Medical & Contact Info</div>
            <div class="info-grid">
                <div class="info-item"><strong>Contact:</strong> @CurrentPatient.Contact</div>
                <div class="info-item"><strong>Sickness:</strong> @CurrentPatient.Sickness</div>
            </div>
        </div>
    </div>
}

@code {
    private Patient CurrentPatient;

    private List<Patient> demoPatients = new()
    {
        new Patient
        {
            Name = "patient1",
            ProfilePictureUrl = "images/zoropfp.jpeg",
            Contact = "123456",
            DateOfBirth = new DateTime(1990,1,1),
            Address = "Schuttersveld",
            Sickness = "Broken arm"
        },
        new Patient
        {
            Name = "admin",
            ProfilePictureUrl = "images/robinpfp.jpg",
            Contact = "987654",
            DateOfBirth = new DateTime(1985,1,1),
            Address = "Grand Line",
            Sickness = "Leadership"
        }
    };

    private int Age => CalculateAge(CurrentPatient?.DateOfBirth ?? DateTime.Today);

    protected override void OnInitialized()
    {
        var username = SessionService.LoggedInUsername;
        CurrentPatient = demoPatients.FirstOrDefault(p => p.Name == username);
    }

    private int CalculateAge(DateTime dob)
    {
        var today = DateTime.Today;
        var age = today.Year - dob.Year;
        if (dob.Date > today.AddYears(-age)) age--;
        return age;
    }

    private void GoBackHome()
    {
        NavigationManager.NavigateTo("/home");
    }

    private void Logout()
    {
        SessionService.ClearUsername();
        NavigationManager.NavigateTo("/");
    }
}
